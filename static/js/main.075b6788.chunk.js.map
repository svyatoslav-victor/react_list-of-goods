{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","selectValue","className","map","item","length","goodsFromServer","App","state","goodsCopy","showGoods","selectedValue","toggleAToZ","toggleLength","setState","reverseOrder","reverse","sortFromAToZ","sort","a","b","localeCompare","resetList","sortByLength","changeLength","event","target","value","this","type","onClick","hidden","htmlFor","name","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iQAQaA,EAA6B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAClD,OACE,oBACEC,UAAU,cADZ,SAGGF,EAAMG,KAAI,SAAAC,GACT,OACEA,EAAKC,QAAUJ,EAEX,oBACEC,UAAU,oBADZ,SAIGE,GAFIA,GAKP,WCpBRE,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WASWC,EAAb,4MACEC,MAAQ,CACNC,UAAU,GAAD,OAAMH,GACfI,WAAW,EACXC,cAAe,GAJnB,EAOEC,YAAa,EAPf,EASEC,cAAe,EATjB,EAWEH,UAAY,WACV,EAAKI,SAAS,CAAEJ,WAAW,KAZ/B,EAeEK,aAAe,WACb,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBC,UAAWD,EAAMC,UAAUO,eAjBjC,EAqBEC,aAAe,WACb,EAAKL,YAAc,EAAKA,WAExB,EAAKE,UAAS,SAAAN,GAAK,MAAK,CACtBC,UAAW,EAAKG,WACZJ,EAAMC,UAAUS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC/CZ,EAAMC,UAAUS,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,WA3BzD,EA+BEG,UAAY,WACV,EAAKR,SAAS,CACZL,UAAU,GAAD,OAAMH,GACfK,cAAe,KAlCrB,EAsCEY,aAAe,WACb,EAAKV,cAAgB,EAAKA,aAE1B,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBC,UAAW,EAAKI,aACZL,EAAMC,UAAUS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEd,OAASe,EAAEf,UAC5CG,EAAMC,UAAUS,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEf,OAASc,EAAEd,eA5CtD,EAgDEmB,aAAe,SAACC,GACd,EAAKX,SAAS,CACZH,eAAgBc,EAAMC,OAAOC,SAlDnC,4CAsDE,WACE,MAIIC,KAAKpB,MAHPE,EADF,EACEA,UACAD,EAFF,EAEEA,UACAE,EAHF,EAGEA,cAGF,OACE,qCACE,sBAAKT,UAAU,MAAf,UACE,uCACA,wBACEA,UAAU,aACV2B,KAAK,SACLC,QAASF,KAAKlB,UACdqB,OAAQrB,EAJV,wBAQCA,EAAY,cAAC,EAAD,CAAWV,MAAOS,EAAWR,YAAaU,IAAoB,QAE7E,sBACET,UAAWQ,EAAY,UAAY,GACnCqB,QAASrB,EAFX,UAIE,wBACEmB,KAAK,SACLC,QAASF,KAAKb,aAFhB,qBAMA,wBACEc,KAAK,SACLC,QAASF,KAAKX,aAFhB,iCAMA,wBACEY,KAAK,SACLC,QAASF,KAAKN,UAFhB,mBAMA,wBACEO,KAAK,SACLC,QAASF,KAAKL,aAFhB,+BAOF,uBACES,QAAQ,eADV,SAGE,yBACEC,KAAK,iBACLC,GAAG,eACHP,MAAOC,KAAKpB,MAAMG,cAClBoB,QAASrB,EACTyB,SAAUP,KAAKJ,aALjB,UAOE,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,4BA3HZ,GAAyBS,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.075b6788.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ninterface Props {\n  goods: string[];\n  selectValue: number,\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods, selectValue }) => {\n  return (\n    <ul\n      className=\"Goods__List\"\n    >\n      {goods.map(item => {\n        return (\n          item.length >= selectValue\n            ? (\n              <li\n                className=\"Goods__List--item\"\n                key={item}\n              >\n                {item}\n              </li>\n            )\n            : null\n        );\n      })}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goodsCopy: string[],\n  showGoods: boolean,\n  selectedValue: number,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goodsCopy: [...goodsFromServer],\n    showGoods: false,\n    selectedValue: 1,\n  };\n\n  toggleAToZ = false;\n\n  toggleLength = false;\n\n  showGoods = () => {\n    this.setState({ showGoods: true });\n  };\n\n  reverseOrder = () => {\n    this.setState(state => ({\n      goodsCopy: state.goodsCopy.reverse(),\n    }));\n  };\n\n  sortFromAToZ = () => {\n    this.toggleAToZ = !this.toggleAToZ;\n\n    this.setState(state => ({\n      goodsCopy: this.toggleAToZ\n        ? state.goodsCopy.sort((a, b) => a.localeCompare(b))\n        : state.goodsCopy.sort((a, b) => b.localeCompare(a)),\n    }));\n  };\n\n  resetList = () => {\n    this.setState({\n      goodsCopy: [...goodsFromServer],\n      selectedValue: 1,\n    });\n  };\n\n  sortByLength = () => {\n    this.toggleLength = !this.toggleLength;\n\n    this.setState(state => ({\n      goodsCopy: this.toggleLength\n        ? state.goodsCopy.sort((a, b) => a.length - b.length)\n        : state.goodsCopy.sort((a, b) => b.length - a.length),\n    }));\n  };\n\n  changeLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      selectedValue: +event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      showGoods,\n      goodsCopy,\n      selectedValue,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Goods</h1>\n          <button\n            className=\"Show_Goods\"\n            type=\"button\"\n            onClick={this.showGoods}\n            hidden={showGoods}\n          >\n            Show Goods\n          </button>\n          {showGoods ? <GoodsList goods={goodsCopy} selectValue={selectedValue} /> : null}\n        </div>\n        <div\n          className={showGoods ? 'Buttons' : ''}\n          hidden={!showGoods}\n        >\n          <button\n            type=\"button\"\n            onClick={this.reverseOrder}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.sortFromAToZ}\n          >\n            Sort Alphabetically\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.resetList}\n          >\n            Reset\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n          >\n            Sort By Length\n          </button>\n        </div>\n        <label\n          htmlFor=\"selectLength\"\n        >\n          <select\n            name=\"lengthSelector\"\n            id=\"selectLength\"\n            value={this.state.selectedValue}\n            hidden={!showGoods}\n            onChange={this.changeLength}\n          >\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n          </select>\n        </label>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}